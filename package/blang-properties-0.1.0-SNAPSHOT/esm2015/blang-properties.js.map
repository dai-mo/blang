{
  "version": 3,
  "file": "blang-properties.js",
  "sources": [
    "ng://@blang/properties/out/properties.module.ts",
    "ng://@blang/properties/out/panel/fields/fields-panel.component.ts",
    "ng://@blang/properties/out/panel/item-list/item-list-panel.component.ts",
    "ng://@blang/properties/out/dialog/item-list/item-list-dialog.component.ts",
    "ng://@blang/properties/out/model/fields.ts"
  ],
  "sourcesContent": [
    "import { ItemListDialogComponent } from \"./dialog/item-list/item-list-dialog.component\"\nimport { ItemListPanelComponent } from \"./panel/item-list/item-list-panel.component\"\nimport { FieldsPanelComponent } from \"./panel/fields/fields-panel.component\"\nimport { NgModule } from \"@angular/core\"\nimport { CommonModule } from \"@angular/common\"\n\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\"\nimport {\n  CheckboxModule,\n  ListboxModule,\n  SliderModule,\n  DropdownModule,\n  TabViewModule,\n  ButtonModule,\n  DialogModule\n} from \"primeng/primeng\"\nimport { MessageService } from \"primeng/components/common/messageservice\"\n\nimport { MatSliderModule } from \"@angular/material/slider\"\nimport { FlexLayoutModule } from \"@angular/flex-layout\"\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TabViewModule,\n    ButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CheckboxModule,\n    ListboxModule,\n    DropdownModule,\n    SliderModule,\n    DialogModule,\n\n    // Angular Material imports\n    MatSliderModule,\n\n    // third party imports\n    FlexLayoutModule\n  ],\n  providers: [MessageService],\n  declarations: [\n    FieldsPanelComponent,\n    ItemListPanelComponent,\n    ItemListDialogComponent\n  ],\n  exports: [\n    FieldsPanelComponent,\n    ItemListPanelComponent,\n    ItemListDialogComponent\n  ]\n})\nexport class PropertiesModule {}\n",
    "import { FieldGroup, Field, FieldUIType } from \"../../model/fields\"\nimport { Component, OnInit, Input } from \"@angular/core\"\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\"\n\nimport * as SI from \"seamless-immutable\"\n\n@Component({\n  selector: \"app-fields-panel\",\n  template: `<div>\n  <form [formGroup]=\"fieldGroup.form\">\n    <div *ngFor=\"let field of fields\" [ngSwitch]=\"field.fieldUIType()\" class=\"value-padding\">\n      <div class=\"ui-g-4\">\n        <label [attr.for]=\"field.name\">{{field.label}}</label>\n      </div>\n      <div>\n        <div class=\"ui-g\" *ngSwitchCase=\"fieldUIType.TEXT\">\n          <div *ngIf=\"!(field.isEditable)\" class=\"ui-g-8\">\n            <span [id]=\"field.name\">{{field.value}}</span>\n          </div>\n          <div *ngIf=\"field.isEditable\" class=\"ui-g-8\">\n            <span class=\"md-inputfield\">\n              <input [id]=\"field.name\" pInputText type=\"text\" class=\"value ui-inputtext ui-corner-all ui-state-default ui-widget\" [formControlName]=\"field.name\"\n                [(ngModel)]=\"field.value\" />\n            </span>\n          </div>\n        </div>\n        <div class=\"ui-g\" *ngSwitchCase=\"fieldUIType.BOOLEAN\">\n          <div *ngIf=\"!(field.isEditable)\" class=\"ui-g-8\">\n            <span [id]=\"field.name\">{{field.value ? 'true' : 'false'}}</span>\n          </div>\n          <div *ngIf=\"field.isEditable\" class=\"ui-g-8\">\n            <p-checkbox [id]=\"field.name\" [(ngModel)]=\"field.value\" binary=\"true\" [formControlName]=\"field.name\" (onChange)=onUpdate()>\n            </p-checkbox>\n          </div>\n        </div>\n        <div class=\"ui-g\" *ngSwitchCase=\"fieldUIType.LIST\">\n          <div *ngIf=\"!(field.isEditable)\" class=\"ui-g-8\">\n            <span [id]=\"field.name\">{{field.value}}</span>\n          </div>\n          <div *ngIf=\"field.isEditable\" class=\"ui-g-8\">\n            <p-dropdown [id]=\"field.name\" [style]=\"{'width':'250px'}\" [options]=\"field.selectItems\" [(ngModel)]=\"field.value\" [formControlName]=\"field.name\"\n              (onChange)=onUpdate() placeholder=\"Select ...\" showClear=\"false\"></p-dropdown>\n          </div>\n        </div>\n        <div class=\"ui-g\" *ngSwitchCase=\"fieldUIType.RANGE\">\n          <div *ngIf=\"!(field.isEditable)\" class=\"ui-g-8\">\n            <span [id]=\"field.name\">{{field.value}}</span>\n          </div>\n          <div *ngIf=\"field.isEditable\" class=\"ui-g-8\">\n            <mat-slider [id]=\"field.name\" [(ngModel)]=\"field.valueIndex\" class=\"value\" (change)=\"onRangeUpdate($event, field)\" [step]=\"1\"\n              [min]=\"0\" [max]=\"field.possibleValues.length - 1\" [tick-interval]=\"1\" [formControlName]=\"field.name\"></mat-slider>\n            <div class=\"value\">\n              <span>{{field.possibleValues[field.valueIndex].value}}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n`,\n  styles: [`.value{width:250px;text-align:center}.value-padding{padding:5px}.ng-invalid{border-color:red}.ng-valid{border-color:#000}`]\n})\nexport class FieldsPanelComponent implements OnInit {\n  @Input() fieldGroup: FieldGroup\n  fields: Field[]\n\n  fieldUIType = FieldUIType\n\n  collect = function(): any {\n    let formValue = SI.from(this.fieldGroup.form.value)\n    this.fields\n      .filter((f: Field) => f.isRange)\n      .forEach(\n        (f: Field) =>\n          (formValue = formValue.set(\n            f.name,\n            f.possibleValues[this.fieldGroup.form.value[f.name]].value\n          ))\n      )\n    return formValue\n  }.bind(this)\n\n  ngOnInit() {\n    this.fields = this.fieldGroup.fields\n    this.fieldGroup.setCollector(this.collect)\n  }\n\n  onUpdate() {\n    if (this.fieldGroup.isReactive) this.fieldGroup.doReactiveSubmit()\n  }\n\n  onRangeUpdate(event: any, field: Field) {\n    if (this.fieldGroup.isReactive) this.onUpdate()\n  }\n\n  isValid(field: Field): boolean {\n    if (!field.isEditable) return true\n    if (field.isRequired) return this.fieldGroup.form.controls[field.name].valid\n  }\n}\n",
    "import {\n  FieldGroup,\n  Field,\n  ItemStatus,\n  Item,\n  ItemConf\n} from \"./../../model/fields\"\n\nimport { Observable } from \"rxjs/Observable\"\n\nimport { SelectItem } from \"primeng/primeng\"\nimport { Component, OnInit, Input } from \"@angular/core\"\n\n// import { ItemConf, ItemStatus, FieldGroup, Field } from \"../../model/fields\"\n\n@Component({\n  selector: \"app-item-list-panel\",\n  template: `<div fxLayout=\"row\" fxLayoutGap=\"15px\">\n  <div *ngIf=\"!itemConf.showFirstItemOnly\" fxFlex=\"0 1 33%\">\n    <p-listbox class=\"item-list\" [options]=\"items\" [(ngModel)]=\"selectedItemValue\" (onChange)=\"select($event.value.id)\" filter=\"filter\"\n      [style]=\"{'width': '100%'}\" [listStyle]=\"{'min-height': '300px', 'max-height': '300px'}\">\n    </p-listbox>\n  </div>\n  <div *ngIf=\"itemConf.isSelected()\" fxFlex=\"0 1 66%\">\n    <p-tabView [style]=\"{'height': '340px'}\">\n      <p-tabPanel *ngFor=\"let fieldGroup of itemConf.selectedItemFieldGroups()\" [header]=\"fieldGroup.label\" [selected]=\"fieldGroup.active\">\n        <app-fields-panel [fieldGroup]=\"fieldGroup\"></app-fields-panel>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n</div>\n\n<p-footer>\n  <div class=\"ui-dialog-footer ui-widget-content ui-helper-clearfix footer\">\n    <button pButton type=\"button\" (click)=\"finalise()\" [disabled]=\"!itemConf.isSelected()\" label=\"{{finaliseLabel}}\">\n    </button>\n    <button pButton type=\"button\" (click)=\"cancel()\" [hidden]=\"itemConf.hideCancel\" label=\"Cancel\">\n    </button>\n  </div>\n</p-footer>\n`,\n  styles: [`.footer{border:none;padding:2px}`]\n})\nexport class ItemListPanelComponent implements OnInit {\n  @Input() itemConf: ItemConf\n  @Input() finaliseLabel: string\n\n  private itemStatus = ItemStatus\n  items: SelectItem[]\n  selectedItemValue: { id: string; status: string }\n  selectedItemFieldGroups: FieldGroup[]\n  selectedItemSpecificFields: Field[]\n\n  constructor() {\n    this.items = []\n  }\n\n  ngOnInit(): void {\n    if (this.itemConf !== undefined) {\n      let itemConfList: Item[]\n      if (this.itemConf.showFirstItemOnly) {\n        itemConfList = [this.itemConf.items[0]]\n        this.select(this.itemConf.items[0].id)\n      } else itemConfList = this.itemConf.list()\n      itemConfList.forEach(fe =>\n        this.items.push({\n          label: fe.name,\n          value: {\n            id: fe.id,\n            status: fe.status\n          }\n        })\n      )\n    }\n  }\n\n  select(itemId: string) {\n    if (this.itemConf !== undefined) {\n      this.itemConf.select(itemId)\n      this.selectedItemFieldGroups = this.itemConf.fieldGroups(itemId)\n      this.selectedItemSpecificFields = this.itemConf.specificFields(itemId)\n    }\n  }\n\n  finalise() {\n    if (this.itemConf !== undefined) {\n      this.itemConf.finalise()\n    }\n  }\n\n  cancel() {\n    this.itemConf.cancel()\n  }\n}\n",
    "import { Component, OnInit, Input } from \"@angular/core\"\nimport { ItemConf } from \"../../model/fields\"\n@Component({\n  selector: \"app-item-list-dialog\",\n  template: `<p-dialog *ngIf=\"isVisible\" [(visible)]=\"isVisible\" class=\"dialog-container\" [header]=\"dialogHeader\" modal=\"modal\" [closable]=\"false\"\n  [responsive]=\"true\">\n  <input [style.display]=\"'none'\" />\n  <app-item-list-panel class=\"dialog-panel\" [itemConf]=\"dialogItemConf\" [finaliseLabel]=\"finaliseLabel\"></app-item-list-panel>\n</p-dialog>\n`,\n  styles: [``]\n})\nexport class ItemListDialogComponent implements OnInit {\n  @Input() isVisible = false\n  @Input() dialogHeader: string\n  @Input() dialogItemConf: ItemConf\n  @Input() finaliseLabel: string\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
    "import { FormGroup, FormControl, Validators } from \"@angular/forms\"\nimport { SelectItem } from \"primeng/primeng\"\nimport * as SI from \"seamless-immutable\"\n\nexport enum FieldType {\n  STRING,\n  NUMBER,\n  BOOLEAN,\n  UNKNOWN\n}\n\nexport enum FieldUIType {\n  UNKNOWN,\n  TEXT,\n  BOOLEAN,\n  LIST,\n  RANGE\n}\n\nexport class PossibleValue {\n  value: string | number\n  displayName: string\n  description: string\n\n  constructor(\n    value: string | number,\n    displayName: string,\n    decscription: string\n  ) {\n    this.value = value\n    this.displayName = displayName\n    this.description = this.description\n  }\n}\n\nexport enum FieldVisibilityLevel {\n  ClosedField = 0,\n  OpenField = 100\n}\n\nexport class Field {\n  name: string\n  label: string\n  description: string\n  defaultValue: string | number | boolean\n  possibleValues: PossibleValue[]\n  value: string | number | boolean\n  isEditable: boolean\n  selectItems: SelectItem[]\n  isRequired: boolean\n  level: FieldVisibilityLevel = FieldVisibilityLevel.ClosedField\n  isRange: boolean\n  valueIndex = 0\n\n  collector: () => any\n  active = false\n\n  static fieldType(type: string): FieldType {\n    switch (type) {\n      case \"STRING\":\n        return FieldType.STRING\n      case \"NUMBER\":\n        return FieldType.NUMBER\n      case \"BOOLEAN\":\n        return FieldType.BOOLEAN\n      default:\n        return FieldType.UNKNOWN\n    }\n  }\n\n  constructor(\n    name: string,\n    label: string,\n    description: string = \"\",\n    defaultValue: string | number | boolean = \"\",\n    possibleValues: PossibleValue[] = [],\n    value: string | number | boolean = \"\",\n    isEditable: boolean = false,\n    isRequired: boolean = false,\n    level: FieldVisibilityLevel = FieldVisibilityLevel.ClosedField,\n    isRange: boolean = false\n  ) {\n    this.name = name\n    this.label = label\n    this.description = description\n    this.defaultValue = defaultValue\n    this.possibleValues = possibleValues\n    this.value = value\n    this.isRange = this.isEditable = isEditable\n    this.isRequired = isRequired\n    this.level = level\n    this.isRange = isRange\n    this.resolveValue()\n  }\n\n  resolveValue() {\n    if (this.possibleValues.length > 0) {\n      // FIXME: Setting the fields value to empty in case of a list of possible\n      //        values essentially encodes the fact that users will always have to\n      //        choose from the list. This runs counter to the Nifi model where\n      //        a processor property definition with a list of possbile values\n      //        should have a default value and that too a default value that\n      //        belongs to the list of possible values. We should ideally be able to\n      //        accomodate both situations.\n      // this.value = \"\"\n      this.possibleValues = this.possibleValues.filter(pv => pv.value !== \"\")\n      this.selectItems = this.possibleValues.map((pv: PossibleValue) => {\n        return { label: pv.displayName, value: pv.value }\n      })\n      this.valueIndex = this.possibleValues.findIndex(\n        (pv: PossibleValue) => pv.value === this.value\n      )\n    }\n  }\n\n  valueToString(value: string | number | boolean): string {\n    if (typeof value === \"string\") {\n      return value\n    }\n\n    if (typeof value === \"number\") {\n      return value.toString()\n    }\n\n    if (typeof value === \"boolean\") {\n      return value.toString()\n    }\n\n    return undefined\n  }\n\n  updateValue(value: string) {\n    this.value = value\n  }\n\n  setCollector(collector: () => any) {\n    this.collector = collector\n  }\n\n  fieldUIType(): FieldUIType {\n    if (this.possibleValues.length > 0) {\n      if (this.isRange) return FieldUIType.RANGE\n      else return FieldUIType.LIST\n    }\n\n    if (typeof this.value === \"string\") {\n      return FieldUIType.TEXT\n    }\n\n    if (typeof this.value === \"boolean\") {\n      return FieldUIType.BOOLEAN\n    }\n\n    return FieldUIType.UNKNOWN\n  }\n\n  isHiddenField(): boolean {\n    return this.level === FieldVisibilityLevel.ClosedField\n  }\n}\n\nexport class FieldGroup {\n  label: string\n  fields: Field[] = []\n  isReactive: boolean\n  active = false\n  collector: () => any\n  submit: (data: any) => void\n  invalid: (key: string, data: any) => void\n\n  form: FormGroup\n\n  constructor(\n    label: string,\n    fields: Field[] = [],\n    invalid: (key: string, data: any) => void = (key: string, data: any) => {},\n    isReactive: boolean = false,\n    submit: (data: any) => void = (data: any) => {}\n  ) {\n    this.label = label\n    if (fields === undefined) this.fields = []\n    else this.fields = fields\n    this.isReactive = isReactive\n    this.form = this.toFormGroup(this.fields)\n    this.submit = submit\n    this.invalid = invalid\n  }\n\n  add(field: Field) {\n    this.fields.push(field)\n  }\n\n  setCollector(collector: () => any) {\n    this.collector = collector\n  }\n\n  isValid(): boolean {\n    let valid = true\n    for (const name of Object.keys(this.form.controls)) {\n      const control = this.form.controls[name]\n      if (control.invalid) {\n        // messageService.add({\n        //   severity: \"warn\",\n        //   summary: \"Input Validation\",\n        //   detail: name + \" is invalid\"\n        // })\n        this.invalid(name, control.value)\n        valid = false\n      }\n    }\n    return valid\n  }\n\n  doSubmit(submit: (data: any) => any) {\n    if (this.isValid()) submit(this.collector())\n  }\n\n  doReactiveSubmit() {\n    this.doSubmit(this.submit)\n  }\n\n  control(field: Field) {\n    return field.isRequired\n      ? new FormControl(field.value, Validators.required)\n      : new FormControl(field.value)\n  }\n\n  toFormGroup(fields: Field[]): FormGroup {\n    const group: any = {}\n\n    fields.filter((f: Field) => f.isEditable).forEach((field: Field) => {\n      group[field.name] = this.control(field)\n    })\n\n    return new FormGroup(group)\n  }\n}\n\nexport enum ItemStatus {\n  OK,\n  WARNING\n}\n\nexport enum ItemType {\n  THREED_OBJECT,\n  VIEWER_SETTINGS\n}\n\nexport class Item {\n  id: string\n  name: string\n  description: string\n  status: ItemStatus\n  fieldGroups: FieldGroup[]\n  specificFields: Field[]\n\n  constructor(\n    id: string,\n    name: string,\n    description: string,\n    status: ItemStatus = ItemStatus.OK,\n    fieldGroups: FieldGroup[] = [],\n    specificFields: Field[] = []\n  ) {\n    this.id = id\n    this.name = name\n    this.description = description\n    this.status = status\n    this.fieldGroups = fieldGroups\n    this.specificFields = specificFields\n  }\n}\n\nexport abstract class ItemConf {\n  selectedItemId: string\n  items: Item[] = []\n\n  hideCancel = false\n  showFirstItemOnly = false\n\n  constructor(showFirstItemOnly = false) {\n    this.showFirstItemOnly = showFirstItemOnly\n  }\n\n  list(): Item[] {\n    return this.items\n  }\n\n  find(itemId: string): Item {\n    return this.items.find((item: Item) => item.id === itemId)\n  }\n\n  fieldGroups(itemId: string): FieldGroup[] {\n    return this.find(itemId).fieldGroups\n  }\n\n  selectedItemFieldGroups(): FieldGroup[] {\n    return this.fieldGroups(this.selectedItemId)\n  }\n\n  specificFields(itemId: string): Field[] {\n    return this.find(itemId).specificFields\n  }\n\n  selectedItemSpecificFields(): Field[] {\n    return this.specificFields(this.selectedItemId)\n  }\n\n  hasItems(): boolean {\n    return this.items.length > 0\n  }\n\n  isSelected(): boolean {\n    return this.selectedItemId !== undefined || this.showFirstItemOnly\n  }\n\n  select(itemId: string): void {\n    this.selectedItemId = itemId\n    const sefgs = this.selectedItemFieldGroups()\n\n    if (sefgs !== undefined && sefgs.length > 0) sefgs[0].active = true\n    else {\n      const sesfs = this.selectedItemSpecificFields()\n      if (sesfs !== undefined && sesfs.length > 0) sesfs[0].active = true\n    }\n  }\n\n  finalise(): void {\n    const sisfs = this.selectedItemSpecificFields()\n    const sifgs = this.selectedItemFieldGroups()\n\n    let allValid = true\n    sifgs.forEach((fg: FieldGroup) => {\n      allValid = fg.isValid()\n    })\n    if (!allValid) return\n\n    const initial: any = {}\n    let updatedProperties = SI.from(initial)\n\n    if (sisfs !== undefined && sisfs.length > 0)\n      sisfs.forEach(sisf => {\n        updatedProperties = updatedProperties.merge(sisf.collector())\n      })\n\n    if (sifgs !== undefined && sifgs.length > 0)\n      sifgs.forEach(sefg => {\n        updatedProperties = updatedProperties.merge(sefg.collector())\n      })\n\n    this.postFinalise(updatedProperties)\n  }\n\n  abstract postFinalise(data?: any): void\n\n  abstract cancel(): void\n}\n"
  ],
  "names": [
    "SI.from"
  ],
  "mappings": "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"
}
